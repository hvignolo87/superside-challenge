name: external-services

x-logging: &logging
  driver: "json-file"
  options:
    max-size: 10m
    max-file: "2"

services:
  airbyte-db:
    image: postgres:${AIRBYTE_POSTGRES_VERSION:-14.7}
    container_name: airbyte-db
    hostname: airbyte-db
    volumes:
      - airbyte-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${AIRBYTE_POSTGRES_USER:-airbyte}
      - POSTGRES_PASSWORD=${AIRBYTE_POSTGRES_PASSWORD:-airbyte}
      - POSTGRES_DB=${AIRBYTE_POSTGRES_DB:-airbyte}
      - POSTGRES_PORT=${AIRBYTE_POSTGRES_PORT:-5432}
    ports:
      - ${AIRBYTE_POSTGRES_PORT_HOST:-5440}:${AIRBYTE_POSTGRES_PORT:-5432}
    restart: on-failure
    networks:
      superside:
        aliases:
          - airbyte-db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${AIRBYTE_POSTGRES_USER:-airbyte}"]
      interval: 5s
      retries: 5

  airflow-db:
    image: postgres:${AIRFLOW_POSTGRES_VERSION:-14.7}
    container_name: airflow-db
    hostname: airflow-db
    volumes:
      - airflow-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${AIRFLOW_POSTGRES_USER:-airflow}
      - POSTGRES_PASSWORD=${AIRFLOW_POSTGRES_PASSWORD:-airflow}
      - POSTGRES_DB=${AIRFLOW_POSTGRES_DB:-airflow}
      - POSTGRES_PORT=${AIRFLOW_POSTGRES_PORT:-5432}
    ports:
      - ${AIRFLOW_POSTGRES_PORT_HOST:-5450}:${AIRFLOW_POSTGRES_PORT:-5432}
    restart: on-failure
    networks:
      superside:
        aliases:
          - airflow-db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${AIRFLOW_POSTGRES_USER:-airflow}"]
      interval: 5s
      retries: 5

  clients-db:
    image: postgres:${CLIENTS_POSTGRES_VERSION:-14.7}
    container_name: clients-db
    hostname: clients-db
    volumes:
      - clients-volume:/var/lib/postgresql/data
      - ./scripts/clients_postgres_init.sh:/docker-entrypoint-initdb.d/postgres_init.sh
      - ./source_data/engagement_metrics_raw.csv:/docker-entrypoint-initdb.d/source_data/engagement_metrics_raw.csv
    environment:
      - POSTGRES_USER=${CLIENTS_POSTGRES_USER:-clients}
      - POSTGRES_PASSWORD=${CLIENTS_POSTGRES_PASSWORD:-clients}
      - POSTGRES_DB=${CLIENTS_POSTGRES_DB:-clients}
      - POSTGRES_PORT=${CLIENTS_POSTGRES_PORT:-5432}
    ports:
      - ${CLIENTS_POSTGRES_PORT_HOST:-5460}:${CLIENTS_POSTGRES_PORT:-5432}
    restart: on-failure
    networks:
      superside:
        aliases:
          - clients-db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${CLIENTS_POSTGRES_USER:-clients}"]
      interval: 5s
      retries: 5

  warehouse:
    image: postgres:${WAREHOUSE_POSTGRES_VERSION:-14.7}
    container_name: warehouse
    hostname: warehouse
    volumes:
      - warehouse-volume:/var/lib/postgresql/data
      - ./scripts/warehouse_postgres_init.sh:/docker-entrypoint-initdb.d/postgres_init.sh
    environment:
      - POSTGRES_USER=${WAREHOUSE_POSTGRES_USER:-warehouse}
      - POSTGRES_PASSWORD=${WAREHOUSE_POSTGRES_PASSWORD:-warehouse}
      - POSTGRES_DB=${WAREHOUSE_POSTGRES_DB:-warehouse}
      - POSTGRES_PORT=${WAREHOUSE_POSTGRES_PORT:-5432}
    ports:
      - ${WAREHOUSE_POSTGRES_PORT_HOST:-5470}:${WAREHOUSE_POSTGRES_PORT:-5432}
    restart: on-failure
    networks:
      superside:
        aliases:
          - warehouse
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${WAREHOUSE_POSTGRES_USER:-warehouse}"]
      interval: 5s
      retries: 5

  registry:
    image: registry:${REGISTRY_VERSION:-2}
    container_name: ${REGISTRY_SERVICE_NAME:-registry}
    hostname: ${REGISTRY_SERVICE_NAME:-registry}
    volumes:
      - registry:/var/lib/registry
    restart: always
    logging: *logging
    networks:
      superside:
        aliases:
          - ${REGISTRY_SERVICE_NAME:-registry}
    ports:
      - ${REGISTRY_PORT:-5000}:5000

volumes:
  airbyte-db-volume:
  airflow-db-volume:
  clients-volume:
  warehouse-volume:
  registry:

networks:
  superside:
    name: ${PROJECT_NAME:-superside}
    driver: bridge
