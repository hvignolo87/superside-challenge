name: airflow-platform

x-airflow-common:
  &airflow-common
  image: airflow-custom-local:latest
  build:
    dockerfile: ./Dockerfile
    context: .
  env_file:
    - ./.env.airflow.local
    - ./.env.dbt.local
  volumes:
    - ./dags:/opt/airflow/dags
    - ./dbt:/opt/airflow/dbt:rw

x-airflow-depends-on:
  &airflow-depends-on
  depends_on:
    airflow-db-metadata:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  warehouse:
    image: postgres:${POSTGRES_VERSION:-14.7}
    container_name: warehouse
    hostname: warehouse
    volumes:
      - warehouse-volume:/var/lib/postgresql/data
      - ./scripts/postgres_init.sh:/docker-entrypoint-initdb.d/postgres_init.sh
      - ./source_data/engagement_metrics_raw.csv:/docker-entrypoint-initdb.d/source_data/engagement_metrics_raw.csv
      - ./source_data/dim_project.csv:/docker-entrypoint-initdb.d/source_data/dim_project.csv
    environment:
      - POSTGRES_USER=warehouse
      - POSTGRES_PASSWORD=warehouse
      - POSTGRES_DB=warehouse
      - POSTGRES_PORT=5432
    ports:
      - 5444:${POSTGRES_PORT:-5432}
    restart: on-failure
    networks:
      default:
        aliases:
          - warehouse
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "warehouse" ]
      interval: 5s
      retries: 5

  airflow-db-metadata:
    image: postgres:${POSTGRES_VERSION:-14.7}
    container_name: airflow-db-metadata
    hostname: airflow-db-metadata
    env_file:
      - ./.env.airflow.local
    volumes:
      - airflow-db-metadata-volume:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT_HOST:-5440}:${POSTGRES_PORT:-5432}
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER:-airflow}" ]
      interval: 5s
      retries: 5

  airflow-scheduler:
    <<: [ *airflow-common, *airflow-depends-on ]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    environment:
      - DBT_HOST=warehouse
      - DBT_PORT=5432
    ports:
      - 8793:8793

  airflow-webserver:
    <<: [ *airflow-common, *airflow-depends-on ]
    container_name: airflow-webserver
    restart: on-failure
    command: webserver
    ports:
      - ${AIRFLOW_WEBSERVER_PORT_HOST:-8081}:8080
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:${AIRFLOW_WEBSERVER_PORT_HOST:-8081}/health"
        ]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    user: 0:0
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID:-0}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow db init

volumes:
  airflow-db-metadata-volume:
  warehouse-volume:

networks:
  default:
    name: airflow_internal
